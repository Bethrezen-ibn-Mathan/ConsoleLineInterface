package AbstractCLI.Commands._old_tmp.Parsing.OptionValues;

/**
 * Состояние опции описывает параметры опции или её значение
 * Когда команда парсится происходит инициализация
 * Приоритетность опций и разрешение конфликтов полагается на обработчик команды
 * Анализ опции и формирование состояний полагается на OptionParser
 *
 * Какие бывают опции:
 *      - опция типа boolean (без аргументов): она или есть или её нет вообще
 *      - опция типа "1 аргумент": для неё есть метод getValue.
 *      - опция типа "N однотипных аргументов": для неё достаточно определить VALUE как массив
 *      или список.
 *      - опция типа "N аргументов": для неё достаточно определить VALUE как Object[] или String[].
 *      Разбором и анализом такой опции занимается обработчик команды.
 *      - опция типа "подкоманда": переопределяется имя опции, аргументы подаются как
 *
 */
public interface OptionState<VALUE> {

    /** @return аргумент или аргументы опции*/
    VALUE getValue();

    /** @return класс, к которому принадлежит значение*/
    Class getValueClass();

    /** @return кол-во аргументов опции (опция без аргументов имеет длину 0) */
    int length();

    /** @return смещение в массиве аргументов, с которого начинается ключ*/
    int offset();
}
